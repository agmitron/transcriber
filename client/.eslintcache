[{"D:\\Code\\transcriber\\client\\src\\index.tsx":"1","D:\\Code\\transcriber\\client\\src\\reportWebVitals.ts":"2","D:\\Code\\transcriber\\client\\src\\App.tsx":"3","D:\\Code\\transcriber\\client\\src\\hooks\\useAuth.ts":"4","D:\\Code\\transcriber\\client\\src\\routes.tsx":"5","D:\\Code\\transcriber\\client\\src\\context\\AuthContext.tsx":"6","D:\\Code\\transcriber\\client\\src\\components\\AppBar.tsx":"7","D:\\Code\\transcriber\\client\\src\\components\\CreateProject.tsx":"8","D:\\Code\\transcriber\\client\\src\\components\\SignIn.tsx":"9","D:\\Code\\transcriber\\client\\src\\components\\SignUp.tsx":"10","D:\\Code\\transcriber\\client\\src\\components\\Card.tsx":"11","D:\\Code\\transcriber\\client\\src\\components\\Projects.tsx":"12","D:\\Code\\transcriber\\client\\src\\components\\Profile.tsx":"13","D:\\Code\\transcriber\\client\\src\\components\\Snackbar.tsx":"14","D:\\Code\\transcriber\\client\\src\\components\\Project.tsx":"15","D:\\Code\\transcriber\\client\\src\\reducers\\messagesReducer.ts":"16","D:\\Code\\transcriber\\client\\src\\context\\MessagesContext.tsx":"17"},{"size":517,"mtime":1608748126804,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1608748126804,"results":"20","hashOfConfig":"19"},{"size":1482,"mtime":1610515737394,"results":"21","hashOfConfig":"19"},{"size":2268,"mtime":1610515565061,"results":"22","hashOfConfig":"19"},{"size":1326,"mtime":1610504356164,"results":"23","hashOfConfig":"19"},{"size":279,"mtime":1610427216873,"results":"24","hashOfConfig":"19"},{"size":2930,"mtime":1610423931853,"results":"25","hashOfConfig":"19"},{"size":4603,"mtime":1610583913023,"results":"26","hashOfConfig":"19"},{"size":4278,"mtime":1610249124881,"results":"27","hashOfConfig":"19"},{"size":5145,"mtime":1608748126803,"results":"28","hashOfConfig":"19"},{"size":1476,"mtime":1610503896757,"results":"29","hashOfConfig":"19"},{"size":1479,"mtime":1610518486103,"results":"30","hashOfConfig":"19"},{"size":2601,"mtime":1610510412433,"results":"31","hashOfConfig":"19"},{"size":773,"mtime":1610442794102,"results":"32","hashOfConfig":"19"},{"size":3284,"mtime":1610519145839,"results":"33","hashOfConfig":"19"},{"size":1559,"mtime":1610518927176,"results":"34","hashOfConfig":"19"},{"size":313,"mtime":1610517252909,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ifnqb5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\Code\\transcriber\\client\\src\\index.tsx",[],["76","77"],"D:\\Code\\transcriber\\client\\src\\reportWebVitals.ts",[],"D:\\Code\\transcriber\\client\\src\\App.tsx",[],"D:\\Code\\transcriber\\client\\src\\hooks\\useAuth.ts",["78"],"import { useState, useCallback, useEffect } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport interface IUserData {\r\n    userID: string\r\n    token: string\r\n}\r\n\r\ninterface IJWTDecodedToken {\r\n    payload: {\r\n        exp: number\r\n        iat: number\r\n    }\r\n}\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState<string>('')\r\n    const [userID, setUserID] = useState<string>('')\r\n    const [expiration, setExpiration] = useState<number | null>(null)\r\n\r\n\r\n    console.log({ token, userID })\r\n\r\n    const login = useCallback((jwtToken: string, id: string) => {\r\n        try {\r\n            setToken(jwtToken)\r\n            setUserID(id)\r\n            const { payload } = jwt.decode(jwtToken, { complete: true }) as IJWTDecodedToken\r\n            setExpiration(payload.exp || null)\r\n            localStorage.setItem(storageName, JSON.stringify({\r\n                userID: id,\r\n                token: jwtToken,\r\n            }))\r\n\r\n        } catch (e) {\r\n            console.error('Failed to login. Try again.')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const json = localStorage.getItem(storageName) || null\r\n\r\n            if (!json) {\r\n                throw new Error('Failed to login')\r\n            }\r\n\r\n            const data: IUserData = JSON.parse(json)\r\n\r\n            if (data?.token) {\r\n                login(data.token, data.userID)\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }, [login])\r\n\r\n    const logout = useCallback(() => {\r\n        setToken('')\r\n        setUserID('')\r\n\r\n        localStorage.removeItem(storageName)\r\n        window.location.replace('/')\r\n    }, [])\r\n\r\n    const checkIsJWTExpired = useCallback(() => {\r\n        try {\r\n            const decodedToken = jwt.decode(token, { complete: true }) as IJWTDecodedToken\r\n            const jwtExpired = (decodedToken.payload.exp * 1000) < Date.now()\r\n\r\n            if (jwtExpired) {\r\n                logout()\r\n                return console.error('The session has expired. Login again.')\r\n            }\r\n\r\n            return false\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, [token, logout])\r\n\r\n    return { login, logout, token, userID, checkIsJWTExpired }\r\n}","D:\\Code\\transcriber\\client\\src\\routes.tsx",[],"D:\\Code\\transcriber\\client\\src\\context\\AuthContext.tsx",["79"],"import React, { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext({\r\n  token: \"\",\r\n  userID: \"\",\r\n  login: (jwtToken: string, id: string) => {},\r\n  logout: () => {},\r\n  isAuthenticated: false,\r\n  checkIsJWTExpired: () => {},\r\n});\r\n\r\nexport default AuthContext;\r\n","D:\\Code\\transcriber\\client\\src\\components\\AppBar.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\CreateProject.tsx",["80","81","82","83"],"D:\\Code\\transcriber\\client\\src\\components\\SignIn.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\SignUp.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\Card.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\Projects.tsx",["84"],"import { Container } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport MessagesContext from \"../context/MessagesContext\";\r\nimport ProjectCard from \"./Card\";\r\nimport { IProject } from \"./Project\";\r\n\r\ninterface IProjectsProps {}\r\n\r\nconst Projects: React.FC<IProjectsProps> = (props) => {\r\n  const [projects, setProjects] = useState<IProject[]>([]);\r\n  const { token, checkIsJWTExpired } = useContext(AuthContext);\r\n  const { pushMessage } = useContext(MessagesContext);\r\n\r\n  useEffect(() => {\r\n    checkIsJWTExpired();\r\n  }, [checkIsJWTExpired]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/projects\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(({ projects, message }) => {\r\n        setProjects((projects as IProject[]).reverse());\r\n\r\n        if (pushMessage) {\r\n          pushMessage({ type: \"success\", text: message });\r\n        }\r\n      })\r\n      .catch(({ message }) =>\r\n        pushMessage ? pushMessage({ type: \"success\", text: message }) : null\r\n      );\r\n  }, [token]);\r\n\r\n  return (\r\n    <Container>\r\n      {projects.length &&\r\n        projects.map((p) => (\r\n          <Link to={`projects/${p._id}`}>\r\n            <ProjectCard text={p.text} title={p.title} />\r\n          </Link>\r\n        ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","D:\\Code\\transcriber\\client\\src\\components\\Profile.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\Snackbar.tsx",["85"],"import S from \"@material-ui/core/Snackbar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\ninterface ISnackbarProps {\r\n  message: string;\r\n  type: \"error\" | \"success\";\r\n}\r\n\r\nconst Snackbar: React.FC<ISnackbarProps> = (props) => {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleClose = (event: React.SyntheticEvent | React.MouseEvent) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <S\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      open={open}\r\n      autoHideDuration={4000}\r\n      onClose={handleClose}\r\n    >\r\n      <MuiAlert severity={props.type} elevation={6} variant=\"filled\">\r\n        {props.message}\r\n      </MuiAlert>\r\n    </S>\r\n  );\r\n};\r\n\r\nexport default Snackbar;\r\n","D:\\Code\\transcriber\\client\\src\\components\\Project.tsx",["86"],"import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport MessagesContext from \"../context/MessagesContext\";\r\n\r\ninterface IProjectProps {\r\n  id: string;\r\n}\r\n\r\nexport interface IProject {\r\n  _id: string;\r\n  text: string;\r\n  title: string;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  verticalMargins: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nconst Project: React.FC<IProjectProps> = (props) => {\r\n  const classes = useStyles();\r\n  const { token, checkIsJWTExpired } = useContext(AuthContext);\r\n  const { pushMessage, currentMessage } = useContext(MessagesContext);\r\n\r\n  const [projectState, setProjectState] = useState({\r\n    title: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    checkIsJWTExpired();\r\n  }, [checkIsJWTExpired]);\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/projects/${props.id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(({ project, message }: { project: IProject; message: string }) => {\r\n        setProjectState(project);\r\n        if (pushMessage) {\r\n          pushMessage({ text: message, type: \"success\" });\r\n        }\r\n\r\n        console.log({ currentMessage });\r\n      })\r\n      .catch((err) => {\r\n        if (pushMessage) {\r\n          pushMessage({ text: err.message, type: \"error\" });\r\n        }\r\n      });\r\n  }, [token]);\r\n\r\n  const editProject = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const response = await fetch(`/api/projects/${props.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(projectState),\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    console.log({ result });\r\n  };\r\n\r\n  const inputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setProjectState((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.verticalMargins}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Проект\r\n      </Typography>\r\n      <form onSubmit={editProject}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              label=\"Название\"\r\n              fullWidth\r\n              name=\"title\"\r\n              value={projectState.title}\r\n              onChange={inputHandler}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              label=\"Описание\"\r\n              fullWidth\r\n              multiline\r\n              value={projectState.text}\r\n              variant=\"outlined\"\r\n              name=\"text\"\r\n              onChange={inputHandler}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.verticalMargins}\r\n          type=\"submit\"\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","D:\\Code\\transcriber\\client\\src\\reducers\\messagesReducer.ts",[],"D:\\Code\\transcriber\\client\\src\\context\\MessagesContext.tsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":21,"column":12,"nodeType":"93","messageId":"94","endLine":21,"endColumn":22},{"ruleId":"91","severity":1,"message":"95","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"96","line":13,"column":3,"nodeType":"93","messageId":"94","endLine":13,"endColumn":7},{"ruleId":"91","severity":1,"message":"97","line":19,"column":10,"nodeType":"93","messageId":"94","endLine":19,"endColumn":22},{"ruleId":"91","severity":1,"message":"98","line":19,"column":24,"nodeType":"93","messageId":"94","endLine":19,"endColumn":34},{"ruleId":"91","severity":1,"message":"99","line":22,"column":10,"nodeType":"93","messageId":"94","endLine":22,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":37,"column":6,"nodeType":"102","endLine":37,"endColumn":13,"suggestions":"103"},{"ruleId":"91","severity":1,"message":"104","line":2,"column":17,"nodeType":"93","messageId":"94","endLine":2,"endColumn":26},{"ruleId":"100","severity":1,"message":"105","line":64,"column":6,"nodeType":"102","endLine":64,"endColumn":13,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"@typescript-eslint/no-unused-vars","'expiration' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","'Menu' is defined but never used.","'languageList' is defined but never used.","'engineList' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pushMessage'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'currentMessage', 'props.id', and 'pushMessage'. Either include them or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [pushMessage, token]",{"range":"115","text":"116"},"Update the dependencies array to be: [currentMessage, props.id, pushMessage, token]",{"range":"117","text":"118"},[1189,1196],"[pushMessage, token]",[1520,1527],"[currentMessage, props.id, pushMessage, token]"]