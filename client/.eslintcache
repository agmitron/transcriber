[{"D:\\Code\\transcriber\\client\\src\\index.tsx":"1","D:\\Code\\transcriber\\client\\src\\reportWebVitals.ts":"2","D:\\Code\\transcriber\\client\\src\\App.tsx":"3","D:\\Code\\transcriber\\client\\src\\hooks\\useAuth.ts":"4","D:\\Code\\transcriber\\client\\src\\routes.tsx":"5","D:\\Code\\transcriber\\client\\src\\context\\AuthContext.tsx":"6","D:\\Code\\transcriber\\client\\src\\components\\AppBar.tsx":"7","D:\\Code\\transcriber\\client\\src\\components\\CreateProject.tsx":"8","D:\\Code\\transcriber\\client\\src\\components\\SignIn.tsx":"9","D:\\Code\\transcriber\\client\\src\\components\\SignUp.tsx":"10","D:\\Code\\transcriber\\client\\src\\components\\Card.tsx":"11"},{"size":517,"mtime":1608748126804,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1608748126804,"results":"14","hashOfConfig":"13"},{"size":726,"mtime":1608748126801,"results":"15","hashOfConfig":"13"},{"size":1290,"mtime":1608748126803,"results":"16","hashOfConfig":"13"},{"size":704,"mtime":1608748126804,"results":"17","hashOfConfig":"13"},{"size":247,"mtime":1608748126803,"results":"18","hashOfConfig":"13"},{"size":2812,"mtime":1608748126802,"results":"19","hashOfConfig":"13"},{"size":3872,"mtime":1609138454524,"results":"20","hashOfConfig":"13"},{"size":4305,"mtime":1608748126802,"results":"21","hashOfConfig":"13"},{"size":5145,"mtime":1608748126803,"results":"22","hashOfConfig":"13"},{"size":1267,"mtime":1608748126802,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ifnqb5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Code\\transcriber\\client\\src\\index.tsx",[],["51","52"],"D:\\Code\\transcriber\\client\\src\\reportWebVitals.ts",[],"D:\\Code\\transcriber\\client\\src\\App.tsx",[],"D:\\Code\\transcriber\\client\\src\\hooks\\useAuth.ts",[],"D:\\Code\\transcriber\\client\\src\\routes.tsx",[],"D:\\Code\\transcriber\\client\\src\\context\\AuthContext.tsx",["53"],"import React, { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext({\r\n  token: \"\",\r\n  userID: \"\",\r\n  login: (jwtToken: string, id: string) => {},\r\n  logout: () => {},\r\n  isAuthenticated: false,\r\n});\r\n\r\nexport default AuthContext;\r\n","D:\\Code\\transcriber\\client\\src\\components\\AppBar.tsx",["54","55","56","57"],"import React, { useContext } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  console.log({ auth });\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Photos\r\n          </Typography>\r\n\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={() => auth.logout()}>Logout</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Code\\transcriber\\client\\src\\components\\CreateProject.tsx",["58","59","60","61","62"],"import React, { useContext, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  createStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  ListSubheader,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { languageList, engineList } from \"../helpers\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProjectCard from \"./Card\";\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n})(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 250,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function CreateProject() {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [transcriberResult, setTranscriberResult] = useState<string>(\"\");\r\n  const [isSent, setIsSent] = useState<boolean>(false);\r\n  const { token } = useContext(AuthContext);\r\n  const classes = useStyles();\r\n\r\n  const sendToTranscibe = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const body = new FormData(e.currentTarget);\r\n\r\n    setIsSent(true);\r\n    setLoading(true);\r\n    const response = await fetch(\"/api/projects/\", {\r\n      method: \"POST\",\r\n      body,\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    const { result } = await response.json();\r\n    setTranscriberResult(result);\r\n    setLoading(false);\r\n    console.log({ result });\r\n  };\r\n  return (\r\n    <Container className=\"mt-50\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Создать проект\r\n      </Typography>\r\n      <form onSubmit={sendToTranscibe}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField required label=\"Название\" fullWidth name=\"title\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              label=\"Описание\"\r\n              fullWidth\r\n              multiline\r\n              variant=\"outlined\"\r\n              name=\"description\"\r\n            />\r\n          </Grid>\r\n          <Grid container item xs={12} justify=\"space-between\">\r\n            <label>\r\n              <StyledButton variant=\"outlined\" color=\"secondary\">\r\n                Загрузить файл\r\n                <input type=\"file\" className=\"file-input\" name=\"file\" />\r\n              </StyledButton>\r\n            </label>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"grouped-select\">\r\n                Выберите движок и язык\r\n              </InputLabel>\r\n              <Select\r\n                defaultValue=\"\"\r\n                id=\"grouped-select\"\r\n                name=\"engine_and_lang\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <ListSubheader>wit.ai</ListSubheader>\r\n                <MenuItem value=\"wit_en\">English</MenuItem>\r\n                <MenuItem value=\"wit_ru\">Русский</MenuItem>\r\n                <ListSubheader>Yandex</ListSubheader>\r\n                <MenuItem value=\"yandex_ru\">Русский</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Создать проект\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n\r\n      {isSent && (\r\n        <ProjectCard\r\n          isLoading={isLoading}\r\n          text={transcriberResult}\r\n          title=\"Project\"\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Code\\transcriber\\client\\src\\components\\SignIn.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\SignUp.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\Card.tsx",[],["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":9,"column":8,"nodeType":"71","messageId":"72","endLine":9,"endColumn":14},{"ruleId":"69","severity":1,"message":"74","line":10,"column":8,"nodeType":"71","messageId":"72","endLine":10,"endColumn":24},{"ruleId":"69","severity":1,"message":"75","line":11,"column":8,"nodeType":"71","messageId":"72","endLine":11,"endColumn":17},{"ruleId":"69","severity":1,"message":"76","line":14,"column":10,"nodeType":"71","messageId":"72","endLine":14,"endColumn":17},{"ruleId":"69","severity":1,"message":"77","line":13,"column":3,"nodeType":"71","messageId":"72","endLine":13,"endColumn":7},{"ruleId":"69","severity":1,"message":"78","line":19,"column":10,"nodeType":"71","messageId":"72","endLine":19,"endColumn":22},{"ruleId":"69","severity":1,"message":"79","line":19,"column":24,"nodeType":"71","messageId":"72","endLine":19,"endColumn":34},{"ruleId":"69","severity":1,"message":"76","line":20,"column":10,"nodeType":"71","messageId":"72","endLine":20,"endColumn":17},{"ruleId":"69","severity":1,"message":"80","line":22,"column":10,"nodeType":"71","messageId":"72","endLine":22,"endColumn":20},{"ruleId":"65","replacedBy":"81"},{"ruleId":"67","replacedBy":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'useAuth' is defined but never used.","'Menu' is defined but never used.","'languageList' is defined but never used.","'engineList' is defined but never used.","'useHistory' is defined but never used.",["83"],["84"],"no-global-assign","no-unsafe-negation"]