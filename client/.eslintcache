[{"D:\\Code\\transcriber\\client\\src\\index.tsx":"1","D:\\Code\\transcriber\\client\\src\\reportWebVitals.ts":"2","D:\\Code\\transcriber\\client\\src\\App.tsx":"3","D:\\Code\\transcriber\\client\\src\\hooks\\useAuth.ts":"4","D:\\Code\\transcriber\\client\\src\\routes.tsx":"5","D:\\Code\\transcriber\\client\\src\\context\\AuthContext.tsx":"6","D:\\Code\\transcriber\\client\\src\\components\\AppBar.tsx":"7","D:\\Code\\transcriber\\client\\src\\components\\CreateProject.tsx":"8","D:\\Code\\transcriber\\client\\src\\components\\SignIn.tsx":"9","D:\\Code\\transcriber\\client\\src\\components\\SignUp.tsx":"10","D:\\Code\\transcriber\\client\\src\\components\\Card.tsx":"11","D:\\Code\\transcriber\\client\\src\\components\\Projects.tsx":"12"},{"size":517,"mtime":1608748126804,"results":"13","hashOfConfig":"14"},{"size":440,"mtime":1608748126804,"results":"15","hashOfConfig":"14"},{"size":748,"mtime":1609233991195,"results":"16","hashOfConfig":"14"},{"size":1285,"mtime":1609238256252,"results":"17","hashOfConfig":"14"},{"size":834,"mtime":1609232733038,"results":"18","hashOfConfig":"14"},{"size":247,"mtime":1608748126803,"results":"19","hashOfConfig":"14"},{"size":3066,"mtime":1609238265997,"results":"20","hashOfConfig":"14"},{"size":3872,"mtime":1609138454524,"results":"21","hashOfConfig":"14"},{"size":4305,"mtime":1608748126802,"results":"22","hashOfConfig":"14"},{"size":5145,"mtime":1608748126803,"results":"23","hashOfConfig":"14"},{"size":1268,"mtime":1609237905971,"results":"24","hashOfConfig":"14"},{"size":956,"mtime":1609238456728,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ifnqb5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Code\\transcriber\\client\\src\\index.tsx",[],["53","54"],"D:\\Code\\transcriber\\client\\src\\reportWebVitals.ts",[],"D:\\Code\\transcriber\\client\\src\\App.tsx",[],"D:\\Code\\transcriber\\client\\src\\hooks\\useAuth.ts",[],"D:\\Code\\transcriber\\client\\src\\routes.tsx",[],"D:\\Code\\transcriber\\client\\src\\context\\AuthContext.tsx",["55"],"import React, { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext({\r\n  token: \"\",\r\n  userID: \"\",\r\n  login: (jwtToken: string, id: string) => {},\r\n  logout: () => {},\r\n  isAuthenticated: false,\r\n});\r\n\r\nexport default AuthContext;\r\n","D:\\Code\\transcriber\\client\\src\\components\\AppBar.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\CreateProject.tsx",["56","57","58","59","60"],"import React, { useContext, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  createStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  ListSubheader,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { languageList, engineList } from \"../helpers\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport AuthContext from \"../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProjectCard from \"./Card\";\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    position: \"relative\",\r\n  },\r\n})(Button);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 250,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function CreateProject() {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [transcriberResult, setTranscriberResult] = useState<string>(\"\");\r\n  const [isSent, setIsSent] = useState<boolean>(false);\r\n  const { token } = useContext(AuthContext);\r\n  const classes = useStyles();\r\n\r\n  const sendToTranscibe = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const body = new FormData(e.currentTarget);\r\n\r\n    setIsSent(true);\r\n    setLoading(true);\r\n    const response = await fetch(\"/api/projects/\", {\r\n      method: \"POST\",\r\n      body,\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n\r\n    const { result } = await response.json();\r\n    setTranscriberResult(result);\r\n    setLoading(false);\r\n    console.log({ result });\r\n  };\r\n  return (\r\n    <Container className=\"mt-50\">\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Создать проект\r\n      </Typography>\r\n      <form onSubmit={sendToTranscibe}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField required label=\"Название\" fullWidth name=\"title\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              required\r\n              label=\"Описание\"\r\n              fullWidth\r\n              multiline\r\n              variant=\"outlined\"\r\n              name=\"description\"\r\n            />\r\n          </Grid>\r\n          <Grid container item xs={12} justify=\"space-between\">\r\n            <label>\r\n              <StyledButton variant=\"outlined\" color=\"secondary\">\r\n                Загрузить файл\r\n                <input type=\"file\" className=\"file-input\" name=\"file\" />\r\n              </StyledButton>\r\n            </label>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"grouped-select\">\r\n                Выберите движок и язык\r\n              </InputLabel>\r\n              <Select\r\n                defaultValue=\"\"\r\n                id=\"grouped-select\"\r\n                name=\"engine_and_lang\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <ListSubheader>wit.ai</ListSubheader>\r\n                <MenuItem value=\"wit_en\">English</MenuItem>\r\n                <MenuItem value=\"wit_ru\">Русский</MenuItem>\r\n                <ListSubheader>Yandex</ListSubheader>\r\n                <MenuItem value=\"yandex_ru\">Русский</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Создать проект\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n\r\n      {isSent && (\r\n        <ProjectCard\r\n          isLoading={isLoading}\r\n          text={transcriberResult}\r\n          title=\"Project\"\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Code\\transcriber\\client\\src\\components\\SignIn.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\SignUp.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\Card.tsx",[],"D:\\Code\\transcriber\\client\\src\\components\\Projects.tsx",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"65","severity":1,"message":"69","line":13,"column":3,"nodeType":"67","messageId":"68","endLine":13,"endColumn":7},{"ruleId":"65","severity":1,"message":"70","line":19,"column":10,"nodeType":"67","messageId":"68","endLine":19,"endColumn":22},{"ruleId":"65","severity":1,"message":"71","line":19,"column":24,"nodeType":"67","messageId":"68","endLine":19,"endColumn":34},{"ruleId":"65","severity":1,"message":"72","line":20,"column":10,"nodeType":"67","messageId":"68","endLine":20,"endColumn":17},{"ruleId":"65","severity":1,"message":"73","line":22,"column":10,"nodeType":"67","messageId":"68","endLine":22,"endColumn":20},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'languageList' is defined but never used.","'engineList' is defined but never used.","'useAuth' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]